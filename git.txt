git安装配置
	git config --list				//查看配置信息
	git config --global user.name "runoob"		//添加全局用户姓名
========================================================================================================



Git 创建仓库
	git init					//初始化
        				
	git clone <repo>       				//将远程<repo>仓库clone到本地
	git clone <repo> <directory>    		//将远程<repo>到本地的<directory>目录
========================================================================================================



Git 基本操作
	git add <repo>      				//添加file到索引(到缓存) 
	git add --all					//添加所有文件

	git status    					//查看上次提交之后是否有修改  
	git status -s					//简介的的结果输出
	输出结的果前面有有AM表示添加到缓存后又改动

	git diff  					//未缓存的改动
	git diff --cached				//查看已缓存的改动
	git diff HEAD					//查看已缓存的与未缓存的所有改动
	git diff --stat					//显示摘要而非整个 diff						

	git commit -m '提交信息’   			//将缓存区内容添加到本地仓库

	git reset HEAD 					//将之前的git add操作取消

	git rm						//删除工作区文件
	git rm -f					//已放入暂存区，强制删除
	git rm --cached					//从暂存区移除，仍保留在工作目录	
	git rm -r					//递归

	git mv 						//移动或者重命名
========================================================================================================



Git 分支管理
	git branch (branchname)				//创建名为branchname的分支

	git checkout (branchname)			//切换到名为branchname的分支
	git checkout -b (branchname) 			//创建并切换到名为branchname的分支

	git merge (branchname)				//将名为(branchname)的分支合并到当前分支

	git checkout -d	(branchname)			//删除名为branchname的分支
========================================================================================================




Git 历史与版本
	git log				              	//历史提交记录
	git log --oneline			        //历史记录的简洁的版
	git log --oneline --graph			/历史记录的简介拓扑版

	git reset --hard				//暂存区和工作区回滚到当前版本(放弃所有修改)
	git reset --hard <commitno>			//暂存区和工作区回滚到commitno版本(放弃所有修改)

	git checkout  <filename>    			//放弃当前filename的修改(不推荐)
	git checkout commitno <filename>     		//回滚指定文件到指定版本号(不推荐)

	git revert HEAD	    				//撤销上次的提交，但是暂存区和工作去还有相应的修改	
========================================================================================================



Git 标签
	git tag -a <tagname> -m	"info"			//为最后一次提交的版本打上tagname标签
	git tag -a <tagname> <commitno> -m "info" 	//为提交编号为commitno的打上tagname标签
========================================================================================================



Git 远程仓库
	git remote -v					//查看当前配置的远程仓库

	git fetch 					//从远程仓库下载新分支与数据到本地

	git merge					//将fetch下来的数据同步到本地(工作区，暂存区，本地仓库)

	git remote rm [repo]				//删除名字为repo的远程仓库

	git (pull/push) [origin] branch			//本地分支(上传到/下载)origin的branch分支

	git push--set-upstream origin branch		//将本地分支与远程branch分支关联并提交
========================================================================================================
Git 多远程仓库同步
	git remote add upstream/downstream <repo>	//给远程仓库添加上/下游仓库

	git fetch upstream/downstream 			//从远程的上或下游仓库下载新分支与数据到本地

	git merge (upstream/master)/(downstream/master)	//从远程上或下游仓库下载master分支与数据到本地